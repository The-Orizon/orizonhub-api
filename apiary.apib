FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# OrizonHub

See also: https://github.com/gumblex/orizonhub

## Group Messenging

### General Settings [/settings]

#### Get Current Setting [GET]

+ Headers
        X-APIKey: <Your_API_KEY>

+ Response 200 (application/json)

    + Attributes (object)
        + id (number, required) - Bot ID
        + name (string, required) - Bot name
        + type (enum[string], required) - Bot type

            + Members
                + `protocol_bridge`
                + `public_service`
                + `logger`

        + admin (string, required) - userID of bot admin
        + hooks (array) - what message should the bot get
        + scope (array) - permissions of api request
        + mode (enum[string]) - bot mode

            + Members
                + `online`
                + `offline`
                + `maintenance`

    + Body
        {
            "id": 0,
            "name": "Tox",
            "type": "protocol_bridge",
            "admin": "tox: quininer",
            "hooks": ["protocol.all.message"],
            "scope": ["userdb.get", "userdb.put"],
            "mode": "online"
        }

#### Update Settings [POST]

+ Headers
        X-APIKey: <Your_API_KEY>

+ Request (application/json)

        {
            "id": 0,
            "name": "Tox",
            "type": "protocol_bridge",
            "admin": "tox: quininer",
            "hooks": ["protocol.all.message"],
            "scope": ["userdb.get", "userdb.put"],
            "mode": "online"
        }

+ Response 200 (application/json)

            {
                "result": 200
            }

### Universal GET [/getUpdates?offset={offset}&timeout={timeout}]

#### Get Message [GET]

+ Headers
        X-APIKey: <Your_API_KEY>

+ Parameters
        + offset: 15 (number) ... Polling Offset
        + timeout: 15 (number) ... Polling time(sec)

+ Response 200 (application/json)

            {
                "type": "net_message",
                "message_id": 0,
                "user": "<USERID>",
                "content": "<CONTENT>"
                "reply_to": <message_id_optional>
            }

### Messenging across networks [/message/all]

#### Post Message [POST]

+ Request (application/json)

    + Headers
            X-APIKey: <Your_API_KEY>
   
    + Body
        {
            "user": "<USERID>",
            "message": "<message_content>",
            "reply_to": <message_id>
        }

+ Response 200 (application/json)

            {
                "result": 200,
                "message": {
                    "type": "net_message",
                    "message_id": 0,
                    "user": "<USERID>",
                    "content": "<CONTENT>"
                    }
            }